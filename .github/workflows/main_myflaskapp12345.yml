name: Build and Deploy Flask App to Azure

on:
  push:
    branches:
      - main  # This triggers the workflow on every push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code from repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Set the Python version (can change it to your version)

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate the environment
          pip install -r requirements.txt  # Install the dependencies from requirements.txt

      # Step 4: Run tests (optional, you can remove this if you don't have tests)
      - name: Run tests
        run: |
          pytest  # Run tests (if you have any)

      # Step 5: Deploy to Azure
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_API_APP_NAME }}  # Set this in your GitHub secrets
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}  # Set this in your GitHub secrets
          package: ./api  # Path to the Flask app (adjust if needed)
        
  configure-env:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job (runs after the build job)

    steps:
      # Step 6: Set environment variables (if needed)
      - name: Configure environment variables
        run: |
          echo "HCAPTCHA_SITEKEY=${{ secrets.HCAPTCHA_SITEKEY }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}" >> .env
          echo "ABSTRACT_API_KEY=${{ secrets.ABSTRACT_API_KEY }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

